setwd("C:/Docs/Data Science/9_DevelopingDataProducts/ExtraReading/ShinyExamples/07-Datatables")
library(shiny)
runApp()
install.packages(c("data.table", "gridExtra", "gtable", "R6", "xtable"))
library(shiny)
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/ExtraReading/ShinyExamples/07-Datatables")
runApp()
runApp()
runApp()
summary(mtcars)
table(mtcars)
class(mtcars)
levels(mtcars)
levels(mtcars$carb)
data(mtcars)
levels(mtcars$carb)
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/Assignment/ShinyApp")
runApp()
runApp()
runApp()
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/ExtraReading/ShinyExamples/09-Navbar")
runApp()
runApp()
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/Assignment/ShinyApp")
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/Assignment/ShinyApp")
runApp()
setwd("C:/Docs/Data Science/9_DevelopingDataProducts/Assignment/ShinyApp")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(mtcars)
mtcars[rownames()]
mtcars[rownames]
rownames(mtcars)
rownames(mtcars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cbind(names = rownames(mtcars), mtcars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lmAll <- lm(mpg ~ ., data=mtcars)
summary(lmAll)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$vs <- as.factor(mtcars$vs)
mtcars$am <- as.factor(mtcars$am)
mtcars$gear <- as.factor(mtcars$gear)
mtcars$carb <- as.factor(mtcars$carb)
lmAll <- lm(mpg ~ ., data=mtcars)
summary(lmAll)
step( lmAll, k=log(nrow(mtcars)) )
stepModel <- step( lmAll, k=log(nrow(mtcars)) )
summary(stepModel)
stepModel$model
stepModel$
stepModel$coefficients
stepModel$coefficients
stepModel$residuals
stepModel$effects
stepModel$
1
stepModel$rank
stepModel$assign
stepModel$
1
stepModel$
a
stepModel$qr
stepModel$df.residual
summary(stepModel)
stepModel$anova
stepModel$coefficients
stepModel$coef
stepModel$adj.r.squared
summary(stepModel)$r.squared
summary(stepModel)$adj.r.squared
stepModel$coefficients
summary(stepModel)
summary(stepModel)$call
class(summary(stepModel)$call)
class(deparse(summary(stepModel)$call)
class(deparse(summary(stepModel)$call))
class(deparse(summary(stepModel)$call))
deparse(summary(stepModel)$call)
summary(lmAll)
summary(stepModel)
deparse(summary(stepModel)$call)
stepModel$qr
stepModel$qr[3]
stepModel$qr[2]
stepModel$qr["Intercept"]
stepModel$fitted.values
stepModel$terms
stepModel$terms$term.labels
stepModel$terms[term.labels]
stepModel$terms["term.labels"]
stepModel$terms
factors(stepModel$terms)
factor(stepModel$terms)
stepModel$coefficients
names(stepModel$coefficients)
names(stepModel$coefficients)[2,10]
names(stepModel$coefficients)[2,]
names(stepModel$coefficients)[2:]
names(stepModel$coefficients)[2,]
names(stepModel$coefficients)[,2]
names(stepModel$coefficients)[2]
names(stepModel$coefficients)[2:5]
names(stepModel$coefficients)
names(stepModel$coefficients)[-1]
vars <- names(stepModel$coefficients)[-1]
names(mtcars)
names(mtcars)-vars
names(mtcars[-vars])
names(mtcars[-(vars)])
names(mtcars[-c(vars)])
vars <- c(names(stepModel$coefficients)[-1])
names(mtcars[-c(vars)])
class(vars)
names(mtcars[-vars])
setdiff(names(mtcars), vars)
summary(stepModel)$terms
summary(stepModel)$terms[,"term.labels"]
summary(stepModel)$terms$variables
summary(stepModel)$terms.variables
(summary(stepModel)$terms)$variables
summary(stepModel)$terms$factors
summary(stepModel)$terms$attr
attr(summary(stepModel)$terms, "term.labels")
vars <- attr(summary(stepModel)$terms, "term.labels")
setdiff(names(mtcars), vars)
